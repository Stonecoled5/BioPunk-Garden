function init(self)
	self.life = 1
	self.doingSomething = false
	self.movesLeft = 2
	self.upClicked = false
	self.downClicked = false
	self.leftClicked = false
	self.rightClicked = false
	self.moveToPos = vmath.vector3(0,0,0)
	msg.post(".", "acquire_input_focus")
	go.set_position(vmath.vector3(500,200,0))
	-- self.current_animation = hash("logo")
	self.speed = vmath.vector3(0,0,0)
end

local function play_animation(self, animation)
	if self.current_animation ~= animation then
		self.current_animation = animation
		msg.post("#sprite", "play_animation", {id = animation})
	end
end	

function update(self, dt)
	msg.post("@render:", "draw_text", {text= "Use left/right/up/down arrow keys to move the logo", position = vmath.vector3(10,25,0)})
	msg.post("@render:", "draw_text", {text= "Logo's go.get_position().x -- " .. math.floor(go.get_position().x), position = vmath.vector3(700,40,0)})
	msg.post("@render:", "draw_text", {text= "Logo's go.get_position().y -- " .. math.floor(go.get_position().y), position = vmath.vector3(700,25,0)})
	msg.post("@render:", "draw_text", {text= "Moves left: " .. self.movesLeft, position = vmath.vector3(35,500,0)})
	
	if (go.get_position().x < 20) then
		self.speed.x = 500
	end
	if (go.get_position().x > 1260) then
		self.speed.x = -500
	end
	if (go.get_position().y > 700) then
		self.speed.y = -500
	end
	if (go.get_position().y < 20) then
		self.speed.y = 500
	end
	if (self.upClicked and go.get_position().y > self.moveToPos.y) then
		self.upClicked = false
		self.doingSomething = false
		self.speed.y = 0
		go.set_position(vmath.vector3(go.get_position().x, math.floor(go.get_position().y), 0))
	end
	if (self.downClicked and go.get_position().y < self.moveToPos.y) then
		self.downClicked = false
		self.doingSomething = false
		self.speed.y = 0
		go.set_position(vmath.vector3(go.get_position().x, math.ceil(go.get_position().y), 0))
	end
	if (self.rightClicked and go.get_position().x > self.moveToPos.x) then
		self.rightClicked = false
		self.doingSomething = false
		self.speed.x = 0
		go.set_position(vmath.vector3(math.floor(go.get_position().x), go.get_position().y, 0))
	end
	if (self.leftClicked and go.get_position().x < self.moveToPos.x) then
		self.leftClicked = false
		self.doingSomething = false
		self.speed.x = 0
		go.set_position(vmath.vector3(math.ceil(go.get_position().x), go.get_position().y, 0))
	end
	sprite.set_hflip("#sprite", self.speed.x < 0)
	go.set_position(go.get_position() + self.speed*dt)
end

function on_input(self, action_id, action)
	if action_id == hash("left") then
		if action.pressed and not self.doingSomething then
			self.doingSomething = true
			self.moveToPos = vmath.vector3(go.get_position().x - 100, go.get_position().y, 0)
			print(self.moveToPos)
			self.speed.x = -500
			self.movesLeft = self.movesLeft - 1
			self.leftClicked = true
			--play_animation(self, hash("wizard_walk"))
		--elseif action.released then
			--self.speed.x = 0
			-- play_animation(self, hash("wizard_idle"))
		end
		return true
	elseif action_id == hash("right") then
		if action.pressed  and not self.doingSomething then
			self.doingSomething = true
			self.moveToPos = vmath.vector3(go.get_position().x + 100, go.get_position().y, 0)
			print(self.moveToPos)
			self.speed.x = 500
			self.movesLeft = self.movesLeft - 1
			self.rightClicked = true
			-- play_animation(self, hash("wizard_walk"))
		end
		return true
	elseif action_id == hash("up") then
		if action.pressed  and not self.doingSomething then
			self.doingSomething = true
			self.moveToPos = vmath.vector3(go.get_position().x, go.get_position().y + 100, 0)
			print(self.moveToPos)
			self.speed.y = 500
			self.movesLeft = self.movesLeft - 1
			self.upClicked = true
			-- play_animation(self, hash("wizard_walk"))
		end
		return true
	elseif action_id == hash("down") then
		if action.pressed and not self.doingSomething then
			self.doingSomething = true
			self.moveToPos = vmath.vector3(go.get_position().x, go.get_position().y - 100, 0)
			print(self.moveToPos)
			self.speed.y = -500
			self.movesLeft = self.movesLeft - 1
			self.downClicked = true
			-- play_animation(self, hash("wizard_walk"))
		end
		return true
	end
end